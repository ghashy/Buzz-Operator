#!/bin/bash

# TESTED ON LINUX ONLY! (debian)

# Define the paths to the nginx configuration file and the temporary file
nginx_conf="/etc/nginx/nginx.conf"
backend_name="my_backend"

# Function to add backend servers to nginx configuration, avoids inserting if
# address is already present
add_servers() {
    for address in "${add_arr[@]}"; do
    awk -v backend_name="$backend_name" -v address="$address" '
        /upstream/ && $2 == backend_name {
            f = 1
        }
        f && $1 == "server" && $2 == address ";" {
            found = 1
        }
        f && /.*}/ {
            if (!found) {
                printf("\t\tserver %s;\n", address)
                found = 1
            }
            f = 0
        }
        { print }
    ' "$nginx_conf" > temp.conf && mv temp.conf "$nginx_conf"
    echo "Adding $address"
    done
}

# Function to remove backend servers from nginx configuration
remove_servers() {
    for address in "${rem_arr[@]}"; do
    sed -i -e "/^\s*server $address;/d" "$nginx_conf"
    echo "removing $address"
    done
}

add_arr=()
rem_arr=()

while [[ -n "$1" ]]; do
    case "$1" in
        --add)
            while [[ "$2" != --* && -n "$2" ]]; do
                add_arr+=("$2")
                shift
            done
            shift
            ;;
        --remove)
            while [[ "$2" != --* && -n "$2"  ]]; do
                rem_arr+=("$2")
                shift
            done
            shift
            ;;
        *)
            echo "star"
            break
            ;;
    esac
done

# Save backup
cp "$nginx_conf" "$nginx_conf.bak"

# Perform actions
add_servers
remove_servers

# Validate configuration
if ! nginx -t; then
    echo "Error in nginx.conf, revert to backup!"
    mv "$nginx_conf.bak" "$nginx_conf"
else
    echo "Success!"
    rm "$nginx_conf.bak"
    systemctl reload nginx
fi



